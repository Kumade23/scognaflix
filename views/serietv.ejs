<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Scognaflix</title>
    <style>
        /* Reset styles */
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: Arial, sans-serif;
        }

        /* Body styling */
        body {
            background-color: #141414;
            color: #ffffff;
            display: flex;
            flex-direction: column;
            align-items: center;
            min-height: 100vh;
            padding: 20px;
        }

        /* Logo */
        .logo img {
            width: 200px;
            margin-bottom: 20px;
        }

        /* Search container styling */
        .search-container {
            width: 100%;
            max-width: 600px;
            margin: 0 auto;
            text-align: center;
        }

        .search-container input[type="text"] {
            width: 100%;
            padding: 12px;
            font-size: 1em;
            border: none;
            border-radius: 5px;
            margin-bottom: 10px;
            outline: none;
            color: #333;
            background-color: #e5e5e5;
            transition: box-shadow 0.3s ease;
        }

        .search-container input[type="text"]:focus {
            box-shadow: 0 4px 12px rgba(229, 9, 20, 0.6);
        }

        /* Series list styling */
        .series-list {
            display: none;
            flex-direction: column;
            align-items: center;
            max-height: 400px;
            overflow-y: auto;
            width: 100%;
            max-width: 600px;
            background-color: #222;
            border-radius: 5px;
            padding: 10px;
        }

        .series-item {
            display: flex;
            align-items: center;
            width: 100%;
            padding: 8px;
            cursor: pointer;
            border-radius: 5px;
            transition: background-color 0.3s ease;
        }

        .series-item:hover {
            background-color: rgba(229, 9, 20, 0.3);
        }

        .series-item img {
            width: 50px;
            height: 75px;
            border-radius: 4px;
            margin-right: 15px;
        }

        .series-item span {
            font-size: 1em;
        }

        /* Seasons and episodes container */
        .season-list {
            margin-top: 20px;
            width: 100%;
            max-width: 800px;
        }

        .season-title {
            font-size: 1.2em;
            color: #e50914;
            text-align: center;
            margin-bottom: 10px;
        }

        .episode-list {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
            margin-bottom: 20px;
            background-color: #222;
            padding: 15px;
            border-radius: 5px;
            justify-content: center;
        }

        .episode-item {
            display: inline-flex;
            justify-content: center;
            align-items: center;
            width: 50px;
            height: 50px;
            font-size: 1em;
            font-weight: bold;
            color: #fff;
            background-color: #333;
            border-radius: 8px;
            cursor: pointer;
            transition: background-color 0.3s ease;
        }

        .episode-item:hover {
            background-color: rgba(229, 9, 20, 0.8);
        }

        /* Player container */
        #playerContainer {
            margin-top: 20px;
            width: 100%;
            max-width: 800px;
        }

        video {
            width: 100%;
            border-radius: 8px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
        }

        /* Rotella di caricamento */
        .loader {
            border: 8px solid #f3f3f3;
            border-radius: 50%;
            border-top: 8px solid #e50914;
            width: 60px;
            height: 60px;
            animation: spin 1s linear infinite;
            display: none;
            margin-top: 20px;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Testo di caricamento */
        .loading-text {
            color: #e50914;
            font-size: 1.2em;
            display: none;
            margin-top: 10px;
        }
    </style>
</head>
<body>
    <!-- Logo -->
    <div class="logo">
        <img src="https://i.imgur.com/cM9BY7P.png" alt="Logo Scognaflix" onclick="window.location.href='/'">
    </div>

    <!-- Search Container -->
    <div class="search-container">
        <input type="text" id="seriesSearch" placeholder="Cerca una serie TV..." oninput="searchSeries()">
        <div id="seriesList" class="series-list"></div>
    </div>

    <!-- Seasons and Episodes Container -->
    <div id="seasonContainer" class="season-list"></div>

    <!-- Player Container -->
    <div id="playerContainer"></div>

    <!-- Rotella di caricamento -->
    <div class="loader" id="loadingSpinner"></div>
    <div class="loading-text" id="loadingText">Caricamento in corso...</div>

    <!-- Include hls.js -->
    <script src="https://cdn.jsdelivr.net/npm/hls.js@latest"></script>
    <script>
        async function searchSeries() {
            const query = document.getElementById('seriesSearch').value.trim();
            const seriesList = document.getElementById('seriesList');
            const seasonContainer = document.getElementById('seasonContainer');
            const playerContainer = document.getElementById('playerContainer');

            // Svuota il contenitore del player e i risultati precedenti
            playerContainer.innerHTML = '';
            seasonContainer.innerHTML = '';

            if (query.length < 3) {
                seriesList.style.display = 'none';
                seriesList.innerHTML = '';
                return;
            }

            try {
                const response = await fetch(`/search-series?query=${encodeURIComponent(query)}`);
                const series = await response.json();

                seriesList.innerHTML = '';
                if (series.length > 0) {
                    seriesList.style.display = 'flex';
                    series.forEach(serie => {
                        const seriesItem = document.createElement('div');
                        seriesItem.classList.add('series-item');
                        seriesItem.onclick = () => fetchSeasonsAndEpisodes(serie.imdb_id);

                        const img = document.createElement('img');
                        img.src = serie.poster_path || 'placeholder.jpg';
                        img.alt = serie.title;

                        const title = document.createElement('span');
                        title.textContent = serie.title;

                        seriesItem.appendChild(img);
                        seriesItem.appendChild(title);
                        seriesList.appendChild(seriesItem);
                    });
                } else {
                    seriesList.style.display = 'none';
                }
            } catch (error) {
                console.error("Errore durante la ricerca della serie:", error);
                alert("Errore nella ricerca della serie. Per favore, riprova piÃ¹ tardi.");
            }
        }

        async function fetchSeasonsAndEpisodes(imdbId) {
            document.getElementById('seriesList').style.display = 'none';
            document.getElementById('seriesSearch').value = '';

            // Svuota i risultati precedenti e mostra il caricamento
            document.getElementById('seasonContainer').innerHTML = '';
            document.getElementById('loadingSpinner').style.display = 'block';
            document.getElementById('loadingText').style.display = 'block';

            const response = await fetch('/scrape-series', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ imdbId })
            });

            const seasons = await response.json();
            displaySeasonsAndEpisodes(seasons);

            // Nascondi la rotella di caricamento
            document.getElementById('loadingSpinner').style.display = 'none';
            document.getElementById('loadingText').style.display = 'none';
        }

        function displaySeasonsAndEpisodes(seasons) {
            const seasonContainer = document.getElementById('seasonContainer');
            seasonContainer.innerHTML = '';

            for (const season in seasons) {
                const seasonTitle = document.createElement('div');
                seasonTitle.classList.add('season-title');
                seasonTitle.textContent = `Stagione ${season}`;
                seasonContainer.appendChild(seasonTitle);

                const episodeList = document.createElement('div');
                episodeList.classList.add('episode-list');

                for (const episode in seasons[season]) {
                    const episodeData = seasons[season][episode];
                    
                    const episodeItem = document.createElement('div');
                    episodeItem.classList.add('episode-item');
                    episodeItem.textContent = episode;
                    
                    episodeItem.onclick = () => displayPlayer(episodeData.m3u8Url);
                    episodeList.appendChild(episodeItem);
                }

                seasonContainer.appendChild(episodeList);
            }
        }

        function displayPlayer(m3u8Url) {
            const playerContainer = document.getElementById('playerContainer');
            playerContainer.innerHTML = '';

            const video = document.createElement('video');
            video.controls = true;
            video.autoplay = true;

            playerContainer.appendChild(video);

            if (Hls.isSupported()) {
                const hls = new Hls();
                hls.loadSource(m3u8Url);
                hls.attachMedia(video);
            } else if (video.canPlayType('application/vnd.apple.mpegurl')) {
                video.src = m3u8Url;
            } else {
                alert("Il tuo browser non supporta lo streaming HLS.");
            }
        }
    </script>
</body>
</html>
